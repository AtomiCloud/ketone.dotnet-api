version: '3'

vars:
  CHART_PATH: infra/root_chart
  RELEASE_NAME: dn___platform___-dn___service___

includes:
  helm: Taskfile.helm.yaml
  tear: tasks/Taskfile.tear.yaml
  stop: tasks/Taskfile.stop.yaml
  util: tasks/Taskfile.util.yaml

env:
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: '0'
  SOS_PROJECT_ID: '1cffa31e-7653-4c0d-9a18-9914a2dbc30b'

tasks:
  email:dev:
    desc: Preview Emails
    dir: App/Templates/Email
    cmds:
      - bun run dev
  email:build:
    desc: Build Emails
    dir: App/Templates/Email
    cmds:
      - bun run email export -p --outDir templates
  migration:create:
    desc: Creates a migration
    env:
      LANDSCAPE: lapras
    cmds:
      - dotnet ef migrations --project ./App add {{.CLI_ARGS}}
  run:
    desc: Runs local .NET Server
    env:
      LANDSCAPE: corsola
    cmds:
      - dotnet run --project App
  setup:
    desc: 'Setup the repository'
    cmds:
      - dotnet restore --use-lock-file
      - dotnet tool restore
      - ./scripts/local/secrets.sh
      - bun install --cwd=./App/Templates/Email
  build:
    desc: Builds application
    cmds:
      - dotnet build --no-restore
  tear:
    desc: Tears down the local development cluster
    cmds:
      - ./scripts/local/delete-k3d-cluster.sh
  exec:
    desc: Starts any application in the cluster
    cmds:
      - ./scripts/local/exec.sh ./config/dev.yaml {{.CLI_ARGS}}
  dev:
    desc: Starts developing application
    env:
      DOTNET_WATCH_RESTART_ON_RUDE_EDIT: true
    cmds:
      - ./scripts/local/dev.sh ./config/dev.yaml dotnet watch run --project App
  stop:
    desc: Stops development in tilt
    cmds:
      - tilt down

  latest:
    desc: Get the latest versions of dependencies
    cmds:
      - task: util:latest-oci
        vars:
          NAME: bromine
          OCI: ghcr.io/atomicloud/sulfoxide.bromine/sulfoxide-bromine
      - task: util:latest-oci
        vars:
          NAME: postgres
          OCI: registry-1.docker.io/bitnamicharts/postgresql
      - task: util:latest-oci
        vars:
          NAME: minio
          OCI: registry-1.docker.io/bitnamicharts/minio
      - task: util:latest-oci
        vars:
          NAME: dragonfly
          OCI: ghcr.io/dragonflydb/dragonfly/helm/dragonfly
  auth:token:
    desc: Obtain Auth token via M2M semantics
    cmds:
      - ./scripts/local/auth-token.sh ./config/dev.yaml {{.CLI_ARGS}}
